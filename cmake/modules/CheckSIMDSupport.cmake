include(CheckCXXCompilerFlag)

if(MSVC)
    check_cxx_compiler_flag("/arch:AVX2" COMPILER_SUPPORTS_AVX2)
    if(COMPILER_SUPPORTS_AVX2)
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /arch:AVX2")
        add_definitions(-D__AVX2__ -D__SSE4_2__ -D__SSE4_1__ -D__SSE3__ -D__SSE2__ -D__SSE__)
        log_option_enabled("AVX2: Advanced Vector Extensions 2 supported and enabled.")
    elseif(COMPILER_SUPPORTS_AVX)
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /arch:AVX")
        add_definitions(-D__AVX__ -D__SSE4_2__ -D__SSE4_1__ -D__SSE3__ -D__SSE2__ -D__SSE__)
        log_option_enabled("AVX: Advanced Vector Extensions supported and enabled.")
    elseif(COMPILER_SUPPORTS_SSE42)
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /arch:SSE4.2")
        add_definitions(-D__SSE4_2__ -D__SSE4_1__ -D__SSE3__ -D__SSE2__ -D__SSE__)
        log_option_enabled("SSE4.2: Streaming SIMD Extensions 4.2 supported and enabled.")
    elseif(COMPILER_SUPPORTS_SSE41)
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /arch:SSE4.1")
        add_definitions(-D__SSE4_1__ -D__SSE3__ -D__SSE2__ -D__SSE__)
        log_option_enabled("SSE4.1: Streaming SIMD Extensions 4.1 supported and enabled.")
    elseif(COMPILER_SUPPORTS_SSE3)
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /arch:SSE3")
        add_definitions(-D__SSE3__ -D__SSE2__ -D__SSE__)
        log_option_enabled("SSE3: Streaming SIMD Extensions 3 supported and enabled.")
    elseif(COMPILER_SUPPORTS_SSE2)
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /arch:SSE2")
        add_definitions(-D__SSE2__ -D__SSE__)
        log_option_enabled("SSE2: Streaming SIMD Extensions 2 supported and enabled.")
    elseif(COMPILER_SUPPORTS_SSE)
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /arch:SSE")
        add_definitions(-D__SSE__)
        log_option_enabled("SSE: Streaming SIMD Extensions supported and enabled.")
    else()
        message(STATUS "No advanced SIMD support found. Proceeding with the default instruction set.")
    endif()
else()
    include(CheckCXXCompilerFlag)
    check_cxx_compiler_flag("-mavx2" COMPILER_SUPPORTS_AVX2)
    if(COMPILER_SUPPORTS_AVX2)
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -mavx2")
        add_definitions(-D__AVX2__)
        log_option_enabled("AVX2: Advanced Vector Extensions 2 supported and enabled.")
    elseif(COMPILER_SUPPORTS_AVX)
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -mavx")
        add_definitions(-D__AVX__)
        log_option_enabled("AVX: Advanced Vector Extensions supported and enabled.")
    elseif(COMPILER_SUPPORTS_SSE42)
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -msse4.2")
        add_definitions(-D__SSE4_2__)
        log_option_enabled("SSE4.2: Streaming SIMD Extensions 4.2 supported and enabled.")
    elseif(COMPILER_SUPPORTS_SSE41)
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -msse4.1")
        add_definitions(-D__SSE4_1__)
        log_option_enabled("SSE4.1: Streaming SIMD Extensions 4.1 supported and enabled.")
    elseif(COMPILER_SUPPORTS_SSE3)
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -msse3")
        add_definitions(-D__SSE3__)
        log_option_enabled("SSE3: Streaming SIMD Extensions 3 supported and enabled.")
    elseif(COMPILER_SUPPORTS_SSE2)
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -msse2")
        add_definitions(-D__SSE2__)
        log_option_enabled("SSE2: Streaming SIMD Extensions 2 supported and enabled.")
    elseif(COMPILER_SUPPORTS_SSE)
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -msse")
        add_definitions(-D__SSE__)
        log_option_enabled("SSE: Streaming SIMD Extensions supported and enabled.")
    else()
        message(STATUS "No advanced SIMD support found. Proceeding with the default instruction set.")
    endif()
endif()
